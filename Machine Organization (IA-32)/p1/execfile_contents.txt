
decode:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 f3 00 00 00       	call   1100 <__x86.get_pc_thunk.bx>
    100d:	81 c3 ab 2f 00 00    	add    $0x2fab,%ebx
    1013:	8b 83 38 00 00 00    	mov    0x38(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <__libc_start_main@plt-0x10>:
    1030:	ff b3 04 00 00 00    	push   0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	00 00                	add    %al,(%eax)
	...

00001040 <__libc_start_main@plt>:
    1040:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1046:	68 00 00 00 00       	push   $0x0
    104b:	e9 e0 ff ff ff       	jmp    1030 <_init+0x30>

00001050 <printf@plt>:
    1050:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1056:	68 08 00 00 00       	push   $0x8
    105b:	e9 d0 ff ff ff       	jmp    1030 <_init+0x30>

00001060 <fgets@plt>:
    1060:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1066:	68 10 00 00 00       	push   $0x10
    106b:	e9 c0 ff ff ff       	jmp    1030 <_init+0x30>

00001070 <fwrite@plt>:
    1070:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1076:	68 18 00 00 00       	push   $0x18
    107b:	e9 b0 ff ff ff       	jmp    1030 <_init+0x30>

00001080 <malloc@plt>:
    1080:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    1086:	68 20 00 00 00       	push   $0x20
    108b:	e9 a0 ff ff ff       	jmp    1030 <_init+0x30>

00001090 <exit@plt>:
    1090:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    1096:	68 28 00 00 00       	push   $0x28
    109b:	e9 90 ff ff ff       	jmp    1030 <_init+0x30>

000010a0 <strlen@plt>:
    10a0:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
    10a6:	68 30 00 00 00       	push   $0x30
    10ab:	e9 80 ff ff ff       	jmp    1030 <_init+0x30>

000010b0 <fopen@plt>:
    10b0:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
    10b6:	68 38 00 00 00       	push   $0x38
    10bb:	e9 70 ff ff ff       	jmp    1030 <_init+0x30>

Disassembly of section .plt.got:

000010c0 <__cxa_finalize@plt>:
    10c0:	ff a3 34 00 00 00    	jmp    *0x34(%ebx)
    10c6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

000010d0 <_start>:
    10d0:	f3 0f 1e fb          	endbr32 
    10d4:	31 ed                	xor    %ebp,%ebp
    10d6:	5e                   	pop    %esi
    10d7:	89 e1                	mov    %esp,%ecx
    10d9:	83 e4 f0             	and    $0xfffffff0,%esp
    10dc:	50                   	push   %eax
    10dd:	54                   	push   %esp
    10de:	52                   	push   %edx
    10df:	e8 18 00 00 00       	call   10fc <_start+0x2c>
    10e4:	81 c3 d4 2e 00 00    	add    $0x2ed4,%ebx
    10ea:	6a 00                	push   $0x0
    10ec:	6a 00                	push   $0x0
    10ee:	51                   	push   %ecx
    10ef:	56                   	push   %esi
    10f0:	ff b3 40 00 00 00    	push   0x40(%ebx)
    10f6:	e8 45 ff ff ff       	call   1040 <__libc_start_main@plt>
    10fb:	f4                   	hlt    
    10fc:	8b 1c 24             	mov    (%esp),%ebx
    10ff:	c3                   	ret    

00001100 <__x86.get_pc_thunk.bx>:
    1100:	8b 1c 24             	mov    (%esp),%ebx
    1103:	c3                   	ret    
    1104:	66 90                	xchg   %ax,%ax
    1106:	66 90                	xchg   %ax,%ax
    1108:	66 90                	xchg   %ax,%ax
    110a:	66 90                	xchg   %ax,%ax
    110c:	66 90                	xchg   %ax,%ax
    110e:	66 90                	xchg   %ax,%ax

00001110 <deregister_tm_clones>:
    1110:	e8 e4 00 00 00       	call   11f9 <__x86.get_pc_thunk.dx>
    1115:	81 c2 a3 2e 00 00    	add    $0x2ea3,%edx
    111b:	8d 8a 50 00 00 00    	lea    0x50(%edx),%ecx
    1121:	8d 82 50 00 00 00    	lea    0x50(%edx),%eax
    1127:	39 c8                	cmp    %ecx,%eax
    1129:	74 1d                	je     1148 <deregister_tm_clones+0x38>
    112b:	8b 82 2c 00 00 00    	mov    0x2c(%edx),%eax
    1131:	85 c0                	test   %eax,%eax
    1133:	74 13                	je     1148 <deregister_tm_clones+0x38>
    1135:	55                   	push   %ebp
    1136:	89 e5                	mov    %esp,%ebp
    1138:	83 ec 14             	sub    $0x14,%esp
    113b:	51                   	push   %ecx
    113c:	ff d0                	call   *%eax
    113e:	83 c4 10             	add    $0x10,%esp
    1141:	c9                   	leave  
    1142:	c3                   	ret    
    1143:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1147:	90                   	nop
    1148:	c3                   	ret    
    1149:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001150 <register_tm_clones>:
    1150:	e8 a4 00 00 00       	call   11f9 <__x86.get_pc_thunk.dx>
    1155:	81 c2 63 2e 00 00    	add    $0x2e63,%edx
    115b:	55                   	push   %ebp
    115c:	89 e5                	mov    %esp,%ebp
    115e:	53                   	push   %ebx
    115f:	8d 8a 50 00 00 00    	lea    0x50(%edx),%ecx
    1165:	8d 82 50 00 00 00    	lea    0x50(%edx),%eax
    116b:	83 ec 04             	sub    $0x4,%esp
    116e:	29 c8                	sub    %ecx,%eax
    1170:	89 c3                	mov    %eax,%ebx
    1172:	c1 e8 1f             	shr    $0x1f,%eax
    1175:	c1 fb 02             	sar    $0x2,%ebx
    1178:	01 d8                	add    %ebx,%eax
    117a:	d1 f8                	sar    %eax
    117c:	74 14                	je     1192 <register_tm_clones+0x42>
    117e:	8b 92 44 00 00 00    	mov    0x44(%edx),%edx
    1184:	85 d2                	test   %edx,%edx
    1186:	74 0a                	je     1192 <register_tm_clones+0x42>
    1188:	83 ec 08             	sub    $0x8,%esp
    118b:	50                   	push   %eax
    118c:	51                   	push   %ecx
    118d:	ff d2                	call   *%edx
    118f:	83 c4 10             	add    $0x10,%esp
    1192:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1195:	c9                   	leave  
    1196:	c3                   	ret    
    1197:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    119e:	66 90                	xchg   %ax,%ax

000011a0 <__do_global_dtors_aux>:
    11a0:	f3 0f 1e fb          	endbr32 
    11a4:	55                   	push   %ebp
    11a5:	89 e5                	mov    %esp,%ebp
    11a7:	53                   	push   %ebx
    11a8:	e8 53 ff ff ff       	call   1100 <__x86.get_pc_thunk.bx>
    11ad:	81 c3 0b 2e 00 00    	add    $0x2e0b,%ebx
    11b3:	83 ec 04             	sub    $0x4,%esp
    11b6:	80 bb 50 00 00 00 00 	cmpb   $0x0,0x50(%ebx)
    11bd:	75 27                	jne    11e6 <__do_global_dtors_aux+0x46>
    11bf:	8b 83 34 00 00 00    	mov    0x34(%ebx),%eax
    11c5:	85 c0                	test   %eax,%eax
    11c7:	74 11                	je     11da <__do_global_dtors_aux+0x3a>
    11c9:	83 ec 0c             	sub    $0xc,%esp
    11cc:	ff b3 4c 00 00 00    	push   0x4c(%ebx)
    11d2:	e8 e9 fe ff ff       	call   10c0 <__cxa_finalize@plt>
    11d7:	83 c4 10             	add    $0x10,%esp
    11da:	e8 31 ff ff ff       	call   1110 <deregister_tm_clones>
    11df:	c6 83 50 00 00 00 01 	movb   $0x1,0x50(%ebx)
    11e6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11e9:	c9                   	leave  
    11ea:	c3                   	ret    
    11eb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11ef:	90                   	nop

000011f0 <frame_dummy>:
    11f0:	f3 0f 1e fb          	endbr32 
    11f4:	e9 57 ff ff ff       	jmp    1150 <register_tm_clones>

000011f9 <__x86.get_pc_thunk.dx>:
    11f9:	8b 14 24             	mov    (%esp),%edx
    11fc:	c3                   	ret    

000011fd <main>:
    11fd:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    1201:	83 e4 f0             	and    $0xfffffff0,%esp
    1204:	ff 71 fc             	push   -0x4(%ecx)
    1207:	55                   	push   %ebp
    1208:	89 e5                	mov    %esp,%ebp
    120a:	53                   	push   %ebx
    120b:	51                   	push   %ecx
    120c:	83 ec 10             	sub    $0x10,%esp
    120f:	e8 ec fe ff ff       	call   1100 <__x86.get_pc_thunk.bx>
    1214:	81 c3 a4 2d 00 00    	add    $0x2da4,%ebx
    121a:	e8 58 00 00 00       	call   1277 <read_cipher_file>
    121f:	89 45 ec             	mov    %eax,-0x14(%ebp)
    1222:	83 ec 08             	sub    $0x8,%esp
    1225:	ff 75 ec             	push   -0x14(%ebp)
    1228:	8d 83 50 e0 ff ff    	lea    -0x1fb0(%ebx),%eax
    122e:	50                   	push   %eax
    122f:	e8 1c fe ff ff       	call   1050 <printf@plt>
    1234:	83 c4 10             	add    $0x10,%esp
    1237:	e8 21 01 00 00       	call   135d <get_login_key>
    123c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    123f:	83 ec 08             	sub    $0x8,%esp
    1242:	ff 75 f0             	push   -0x10(%ebp)
    1245:	ff 75 ec             	push   -0x14(%ebp)
    1248:	e8 c0 01 00 00       	call   140d <decode>
    124d:	83 c4 10             	add    $0x10,%esp
    1250:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1253:	83 ec 08             	sub    $0x8,%esp
    1256:	ff 75 f4             	push   -0xc(%ebp)
    1259:	8d 83 66 e0 ff ff    	lea    -0x1f9a(%ebx),%eax
    125f:	50                   	push   %eax
    1260:	e8 eb fd ff ff       	call   1050 <printf@plt>
    1265:	83 c4 10             	add    $0x10,%esp
    1268:	b8 00 00 00 00       	mov    $0x0,%eax
    126d:	8d 65 f8             	lea    -0x8(%ebp),%esp
    1270:	59                   	pop    %ecx
    1271:	5b                   	pop    %ebx
    1272:	5d                   	pop    %ebp
    1273:	8d 61 fc             	lea    -0x4(%ecx),%esp
    1276:	c3                   	ret    

00001277 <read_cipher_file>:
    1277:	55                   	push   %ebp
    1278:	89 e5                	mov    %esp,%ebp
    127a:	53                   	push   %ebx
    127b:	83 ec 14             	sub    $0x14,%esp
    127e:	e8 7d fe ff ff       	call   1100 <__x86.get_pc_thunk.bx>
    1283:	81 c3 35 2d 00 00    	add    $0x2d35,%ebx
    1289:	83 ec 08             	sub    $0x8,%esp
    128c:	8d 83 75 e0 ff ff    	lea    -0x1f8b(%ebx),%eax
    1292:	50                   	push   %eax
    1293:	8d 83 77 e0 ff ff    	lea    -0x1f89(%ebx),%eax
    1299:	50                   	push   %eax
    129a:	e8 11 fe ff ff       	call   10b0 <fopen@plt>
    129f:	83 c4 10             	add    $0x10,%esp
    12a2:	89 45 ec             	mov    %eax,-0x14(%ebp)
    12a5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
    12a9:	75 26                	jne    12d1 <read_cipher_file+0x5a>
    12ab:	8b 83 30 00 00 00    	mov    0x30(%ebx),%eax
    12b1:	8b 00                	mov    (%eax),%eax
    12b3:	50                   	push   %eax
    12b4:	6a 1e                	push   $0x1e
    12b6:	6a 01                	push   $0x1
    12b8:	8d 83 84 e0 ff ff    	lea    -0x1f7c(%ebx),%eax
    12be:	50                   	push   %eax
    12bf:	e8 ac fd ff ff       	call   1070 <fwrite@plt>
    12c4:	83 c4 10             	add    $0x10,%esp
    12c7:	83 ec 0c             	sub    $0xc,%esp
    12ca:	6a 01                	push   $0x1
    12cc:	e8 bf fd ff ff       	call   1090 <exit@plt>
    12d1:	83 ec 0c             	sub    $0xc,%esp
    12d4:	68 e8 03 00 00       	push   $0x3e8
    12d9:	e8 a2 fd ff ff       	call   1080 <malloc@plt>
    12de:	83 c4 10             	add    $0x10,%esp
    12e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    12e4:	83 ec 04             	sub    $0x4,%esp
    12e7:	ff 75 ec             	push   -0x14(%ebp)
    12ea:	68 e8 03 00 00       	push   $0x3e8
    12ef:	ff 75 f0             	push   -0x10(%ebp)
    12f2:	e8 69 fd ff ff       	call   1060 <fgets@plt>
    12f7:	83 c4 10             	add    $0x10,%esp
    12fa:	85 c0                	test   %eax,%eax
    12fc:	75 26                	jne    1324 <read_cipher_file+0xad>
    12fe:	8b 83 30 00 00 00    	mov    0x30(%ebx),%eax
    1304:	8b 00                	mov    (%eax),%eax
    1306:	50                   	push   %eax
    1307:	6a 20                	push   $0x20
    1309:	6a 01                	push   $0x1
    130b:	8d 83 a4 e0 ff ff    	lea    -0x1f5c(%ebx),%eax
    1311:	50                   	push   %eax
    1312:	e8 59 fd ff ff       	call   1070 <fwrite@plt>
    1317:	83 c4 10             	add    $0x10,%esp
    131a:	83 ec 0c             	sub    $0xc,%esp
    131d:	6a 01                	push   $0x1
    131f:	e8 6c fd ff ff       	call   1090 <exit@plt>
    1324:	83 ec 0c             	sub    $0xc,%esp
    1327:	ff 75 f0             	push   -0x10(%ebp)
    132a:	e8 71 fd ff ff       	call   10a0 <strlen@plt>
    132f:	83 c4 10             	add    $0x10,%esp
    1332:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1335:	8b 45 f4             	mov    -0xc(%ebp),%eax
    1338:	8d 50 ff             	lea    -0x1(%eax),%edx
    133b:	8b 45 f0             	mov    -0x10(%ebp),%eax
    133e:	01 d0                	add    %edx,%eax
    1340:	0f b6 00             	movzbl (%eax),%eax
    1343:	3c 0a                	cmp    $0xa,%al
    1345:	75 0e                	jne    1355 <read_cipher_file+0xde>
    1347:	8b 45 f4             	mov    -0xc(%ebp),%eax
    134a:	8d 50 ff             	lea    -0x1(%eax),%edx
    134d:	8b 45 f0             	mov    -0x10(%ebp),%eax
    1350:	01 d0                	add    %edx,%eax
    1352:	c6 00 00             	movb   $0x0,(%eax)
    1355:	8b 45 f0             	mov    -0x10(%ebp),%eax
    1358:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    135b:	c9                   	leave  
    135c:	c3                   	ret    

0000135d <get_login_key>:
    135d:	55                   	push   %ebp
    135e:	89 e5                	mov    %esp,%ebp
    1360:	53                   	push   %ebx
    1361:	83 ec 14             	sub    $0x14,%esp
    1364:	e8 97 fd ff ff       	call   1100 <__x86.get_pc_thunk.bx>
    1369:	81 c3 4f 2c 00 00    	add    $0x2c4f,%ebx
    136f:	83 ec 0c             	sub    $0xc,%esp
    1372:	6a 32                	push   $0x32
    1374:	e8 07 fd ff ff       	call   1080 <malloc@plt>
    1379:	83 c4 10             	add    $0x10,%esp
    137c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    137f:	83 ec 0c             	sub    $0xc,%esp
    1382:	8d 83 c5 e0 ff ff    	lea    -0x1f3b(%ebx),%eax
    1388:	50                   	push   %eax
    1389:	e8 c2 fc ff ff       	call   1050 <printf@plt>
    138e:	83 c4 10             	add    $0x10,%esp
    1391:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
    1397:	8b 00                	mov    (%eax),%eax
    1399:	83 ec 04             	sub    $0x4,%esp
    139c:	50                   	push   %eax
    139d:	6a 32                	push   $0x32
    139f:	ff 75 f0             	push   -0x10(%ebp)
    13a2:	e8 b9 fc ff ff       	call   1060 <fgets@plt>
    13a7:	83 c4 10             	add    $0x10,%esp
    13aa:	85 c0                	test   %eax,%eax
    13ac:	75 26                	jne    13d4 <get_login_key+0x77>
    13ae:	8b 83 30 00 00 00    	mov    0x30(%ebx),%eax
    13b4:	8b 00                	mov    (%eax),%eax
    13b6:	50                   	push   %eax
    13b7:	6a 1a                	push   $0x1a
    13b9:	6a 01                	push   $0x1
    13bb:	8d 83 d5 e0 ff ff    	lea    -0x1f2b(%ebx),%eax
    13c1:	50                   	push   %eax
    13c2:	e8 a9 fc ff ff       	call   1070 <fwrite@plt>
    13c7:	83 c4 10             	add    $0x10,%esp
    13ca:	83 ec 0c             	sub    $0xc,%esp
    13cd:	6a 01                	push   $0x1
    13cf:	e8 bc fc ff ff       	call   1090 <exit@plt>
    13d4:	83 ec 0c             	sub    $0xc,%esp
    13d7:	ff 75 f0             	push   -0x10(%ebp)
    13da:	e8 c1 fc ff ff       	call   10a0 <strlen@plt>
    13df:	83 c4 10             	add    $0x10,%esp
    13e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    13e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
    13e8:	8d 50 ff             	lea    -0x1(%eax),%edx
    13eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
    13ee:	01 d0                	add    %edx,%eax
    13f0:	0f b6 00             	movzbl (%eax),%eax
    13f3:	3c 0a                	cmp    $0xa,%al
    13f5:	75 0e                	jne    1405 <get_login_key+0xa8>
    13f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
    13fa:	8d 50 ff             	lea    -0x1(%eax),%edx
    13fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
    1400:	01 d0                	add    %edx,%eax
    1402:	c6 00 00             	movb   $0x0,(%eax)
    1405:	8b 45 f0             	mov    -0x10(%ebp),%eax
    1408:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    140b:	c9                   	leave  
    140c:	c3                   	ret    

0000140d <decode>:
    140d:	55                   	push   %ebp
    140e:	89 e5                	mov    %esp,%ebp
    1410:	83 ec 18             	sub    $0x18,%esp
    1413:	e8 06 01 00 00       	call   151e <__x86.get_pc_thunk.ax>
    1418:	05 a0 2b 00 00       	add    $0x2ba0,%eax
    141d:	83 ec 0c             	sub    $0xc,%esp
    1420:	ff 75 0c             	push   0xc(%ebp)
    1423:	e8 82 00 00 00       	call   14aa <calculate_shifts>
    1428:	83 c4 10             	add    $0x10,%esp
    142b:	89 45 ec             	mov    %eax,-0x14(%ebp)
    142e:	8b 45 08             	mov    0x8(%ebp),%eax
    1431:	89 45 e8             	mov    %eax,-0x18(%ebp)
    1434:	eb 65                	jmp    149b <decode+0x8e>
    1436:	8b 45 e8             	mov    -0x18(%ebp),%eax
    1439:	0f b6 00             	movzbl (%eax),%eax
    143c:	3c 60                	cmp    $0x60,%al
    143e:	7e 56                	jle    1496 <decode+0x89>
    1440:	8b 45 e8             	mov    -0x18(%ebp),%eax
    1443:	0f b6 00             	movzbl (%eax),%eax
    1446:	3c 7a                	cmp    $0x7a,%al
    1448:	7f 4c                	jg     1496 <decode+0x89>
    144a:	8b 45 e8             	mov    -0x18(%ebp),%eax
    144d:	0f b6 00             	movzbl (%eax),%eax
    1450:	0f be c0             	movsbl %al,%eax
    1453:	83 e8 61             	sub    $0x61,%eax
    1456:	89 45 f0             	mov    %eax,-0x10(%ebp)
    1459:	8b 55 f0             	mov    -0x10(%ebp),%edx
    145c:	8b 45 ec             	mov    -0x14(%ebp),%eax
    145f:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
    1462:	ba 4f ec c4 4e       	mov    $0x4ec4ec4f,%edx
    1467:	89 c8                	mov    %ecx,%eax
    1469:	f7 ea                	imul   %edx
    146b:	89 d0                	mov    %edx,%eax
    146d:	c1 f8 03             	sar    $0x3,%eax
    1470:	89 ca                	mov    %ecx,%edx
    1472:	c1 fa 1f             	sar    $0x1f,%edx
    1475:	29 d0                	sub    %edx,%eax
    1477:	89 45 f4             	mov    %eax,-0xc(%ebp)
    147a:	8b 45 f4             	mov    -0xc(%ebp),%eax
    147d:	6b d0 1a             	imul   $0x1a,%eax,%edx
    1480:	89 c8                	mov    %ecx,%eax
    1482:	29 d0                	sub    %edx,%eax
    1484:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1487:	8b 45 f4             	mov    -0xc(%ebp),%eax
    148a:	83 c0 61             	add    $0x61,%eax
    148d:	89 c2                	mov    %eax,%edx
    148f:	8b 45 e8             	mov    -0x18(%ebp),%eax
    1492:	88 10                	mov    %dl,(%eax)
    1494:	eb 01                	jmp    1497 <decode+0x8a>
    1496:	90                   	nop
    1497:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
    149b:	8b 45 e8             	mov    -0x18(%ebp),%eax
    149e:	0f b6 00             	movzbl (%eax),%eax
    14a1:	84 c0                	test   %al,%al
    14a3:	75 91                	jne    1436 <decode+0x29>
    14a5:	8b 45 08             	mov    0x8(%ebp),%eax
    14a8:	c9                   	leave  
    14a9:	c3                   	ret    

000014aa <calculate_shifts>:
    14aa:	55                   	push   %ebp
    14ab:	89 e5                	mov    %esp,%ebp
    14ad:	83 ec 10             	sub    $0x10,%esp
    14b0:	e8 69 00 00 00       	call   151e <__x86.get_pc_thunk.ax>
    14b5:	05 03 2b 00 00       	add    $0x2b03,%eax
    14ba:	8b 45 08             	mov    0x8(%ebp),%eax
    14bd:	89 45 f8             	mov    %eax,-0x8(%ebp)
    14c0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
    14c7:	eb 10                	jmp    14d9 <calculate_shifts+0x2f>
    14c9:	8b 45 f8             	mov    -0x8(%ebp),%eax
    14cc:	0f b6 00             	movzbl (%eax),%eax
    14cf:	0f be c0             	movsbl %al,%eax
    14d2:	31 45 fc             	xor    %eax,-0x4(%ebp)
    14d5:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
    14d9:	8b 45 f8             	mov    -0x8(%ebp),%eax
    14dc:	0f b6 00             	movzbl (%eax),%eax
    14df:	84 c0                	test   %al,%al
    14e1:	75 e6                	jne    14c9 <calculate_shifts+0x1f>
    14e3:	8b 4d fc             	mov    -0x4(%ebp),%ecx
    14e6:	ba 4f ec c4 4e       	mov    $0x4ec4ec4f,%edx
    14eb:	89 c8                	mov    %ecx,%eax
    14ed:	f7 ea                	imul   %edx
    14ef:	89 d0                	mov    %edx,%eax
    14f1:	c1 f8 03             	sar    $0x3,%eax
    14f4:	89 ca                	mov    %ecx,%edx
    14f6:	c1 fa 1f             	sar    $0x1f,%edx
    14f9:	29 d0                	sub    %edx,%eax
    14fb:	6b d0 1a             	imul   $0x1a,%eax,%edx
    14fe:	89 c8                	mov    %ecx,%eax
    1500:	29 d0                	sub    %edx,%eax
    1502:	89 c2                	mov    %eax,%edx
    1504:	f7 da                	neg    %edx
    1506:	0f 49 c2             	cmovns %edx,%eax
    1509:	89 45 fc             	mov    %eax,-0x4(%ebp)
    150c:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
    1510:	75 07                	jne    1519 <calculate_shifts+0x6f>
    1512:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)
    1519:	8b 45 fc             	mov    -0x4(%ebp),%eax
    151c:	c9                   	leave  
    151d:	c3                   	ret    

0000151e <__x86.get_pc_thunk.ax>:
    151e:	8b 04 24             	mov    (%esp),%eax
    1521:	c3                   	ret    

Disassembly of section .fini:

00001524 <_fini>:
    1524:	f3 0f 1e fb          	endbr32 
    1528:	53                   	push   %ebx
    1529:	83 ec 08             	sub    $0x8,%esp
    152c:	e8 cf fb ff ff       	call   1100 <__x86.get_pc_thunk.bx>
    1531:	81 c3 87 2a 00 00    	add    $0x2a87,%ebx
    1537:	83 c4 08             	add    $0x8,%esp
    153a:	5b                   	pop    %ebx
    153b:	c3                   	ret    

decode.o:     file format elf32-i386


Disassembly of section .text:

00000000 <main>:
   0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
   4:	83 e4 f0             	and    $0xfffffff0,%esp
   7:	ff 71 fc             	push   -0x4(%ecx)
   a:	55                   	push   %ebp
   b:	89 e5                	mov    %esp,%ebp
   d:	53                   	push   %ebx
   e:	51                   	push   %ecx
   f:	83 ec 10             	sub    $0x10,%esp
  12:	e8 fc ff ff ff       	call   13 <main+0x13>
  17:	81 c3 02 00 00 00    	add    $0x2,%ebx
  1d:	e8 fc ff ff ff       	call   1e <main+0x1e>
  22:	89 45 ec             	mov    %eax,-0x14(%ebp)
  25:	83 ec 08             	sub    $0x8,%esp
  28:	ff 75 ec             	push   -0x14(%ebp)
  2b:	8d 83 00 00 00 00    	lea    0x0(%ebx),%eax
  31:	50                   	push   %eax
  32:	e8 fc ff ff ff       	call   33 <main+0x33>
  37:	83 c4 10             	add    $0x10,%esp
  3a:	e8 fc ff ff ff       	call   3b <main+0x3b>
  3f:	89 45 f0             	mov    %eax,-0x10(%ebp)
  42:	83 ec 08             	sub    $0x8,%esp
  45:	ff 75 f0             	push   -0x10(%ebp)
  48:	ff 75 ec             	push   -0x14(%ebp)
  4b:	e8 fc ff ff ff       	call   4c <main+0x4c>
  50:	83 c4 10             	add    $0x10,%esp
  53:	89 45 f4             	mov    %eax,-0xc(%ebp)
  56:	83 ec 08             	sub    $0x8,%esp
  59:	ff 75 f4             	push   -0xc(%ebp)
  5c:	8d 83 16 00 00 00    	lea    0x16(%ebx),%eax
  62:	50                   	push   %eax
  63:	e8 fc ff ff ff       	call   64 <main+0x64>
  68:	83 c4 10             	add    $0x10,%esp
  6b:	b8 00 00 00 00       	mov    $0x0,%eax
  70:	8d 65 f8             	lea    -0x8(%ebp),%esp
  73:	59                   	pop    %ecx
  74:	5b                   	pop    %ebx
  75:	5d                   	pop    %ebp
  76:	8d 61 fc             	lea    -0x4(%ecx),%esp
  79:	c3                   	ret    

0000007a <read_cipher_file>:
  7a:	55                   	push   %ebp
  7b:	89 e5                	mov    %esp,%ebp
  7d:	53                   	push   %ebx
  7e:	83 ec 14             	sub    $0x14,%esp
  81:	e8 fc ff ff ff       	call   82 <read_cipher_file+0x8>
  86:	81 c3 02 00 00 00    	add    $0x2,%ebx
  8c:	83 ec 08             	sub    $0x8,%esp
  8f:	8d 83 25 00 00 00    	lea    0x25(%ebx),%eax
  95:	50                   	push   %eax
  96:	8d 83 27 00 00 00    	lea    0x27(%ebx),%eax
  9c:	50                   	push   %eax
  9d:	e8 fc ff ff ff       	call   9e <read_cipher_file+0x24>
  a2:	83 c4 10             	add    $0x10,%esp
  a5:	89 45 ec             	mov    %eax,-0x14(%ebp)
  a8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
  ac:	75 26                	jne    d4 <read_cipher_file+0x5a>
  ae:	8b 83 00 00 00 00    	mov    0x0(%ebx),%eax
  b4:	8b 00                	mov    (%eax),%eax
  b6:	50                   	push   %eax
  b7:	6a 1e                	push   $0x1e
  b9:	6a 01                	push   $0x1
  bb:	8d 83 34 00 00 00    	lea    0x34(%ebx),%eax
  c1:	50                   	push   %eax
  c2:	e8 fc ff ff ff       	call   c3 <read_cipher_file+0x49>
  c7:	83 c4 10             	add    $0x10,%esp
  ca:	83 ec 0c             	sub    $0xc,%esp
  cd:	6a 01                	push   $0x1
  cf:	e8 fc ff ff ff       	call   d0 <read_cipher_file+0x56>
  d4:	83 ec 0c             	sub    $0xc,%esp
  d7:	68 e8 03 00 00       	push   $0x3e8
  dc:	e8 fc ff ff ff       	call   dd <read_cipher_file+0x63>
  e1:	83 c4 10             	add    $0x10,%esp
  e4:	89 45 f0             	mov    %eax,-0x10(%ebp)
  e7:	83 ec 04             	sub    $0x4,%esp
  ea:	ff 75 ec             	push   -0x14(%ebp)
  ed:	68 e8 03 00 00       	push   $0x3e8
  f2:	ff 75 f0             	push   -0x10(%ebp)
  f5:	e8 fc ff ff ff       	call   f6 <read_cipher_file+0x7c>
  fa:	83 c4 10             	add    $0x10,%esp
  fd:	85 c0                	test   %eax,%eax
  ff:	75 26                	jne    127 <read_cipher_file+0xad>
 101:	8b 83 00 00 00 00    	mov    0x0(%ebx),%eax
 107:	8b 00                	mov    (%eax),%eax
 109:	50                   	push   %eax
 10a:	6a 20                	push   $0x20
 10c:	6a 01                	push   $0x1
 10e:	8d 83 54 00 00 00    	lea    0x54(%ebx),%eax
 114:	50                   	push   %eax
 115:	e8 fc ff ff ff       	call   116 <read_cipher_file+0x9c>
 11a:	83 c4 10             	add    $0x10,%esp
 11d:	83 ec 0c             	sub    $0xc,%esp
 120:	6a 01                	push   $0x1
 122:	e8 fc ff ff ff       	call   123 <read_cipher_file+0xa9>
 127:	83 ec 0c             	sub    $0xc,%esp
 12a:	ff 75 f0             	push   -0x10(%ebp)
 12d:	e8 fc ff ff ff       	call   12e <read_cipher_file+0xb4>
 132:	83 c4 10             	add    $0x10,%esp
 135:	89 45 f4             	mov    %eax,-0xc(%ebp)
 138:	8b 45 f4             	mov    -0xc(%ebp),%eax
 13b:	8d 50 ff             	lea    -0x1(%eax),%edx
 13e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 141:	01 d0                	add    %edx,%eax
 143:	0f b6 00             	movzbl (%eax),%eax
 146:	3c 0a                	cmp    $0xa,%al
 148:	75 0e                	jne    158 <read_cipher_file+0xde>
 14a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 14d:	8d 50 ff             	lea    -0x1(%eax),%edx
 150:	8b 45 f0             	mov    -0x10(%ebp),%eax
 153:	01 d0                	add    %edx,%eax
 155:	c6 00 00             	movb   $0x0,(%eax)
 158:	8b 45 f0             	mov    -0x10(%ebp),%eax
 15b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 15e:	c9                   	leave  
 15f:	c3                   	ret    

00000160 <get_login_key>:
 160:	55                   	push   %ebp
 161:	89 e5                	mov    %esp,%ebp
 163:	53                   	push   %ebx
 164:	83 ec 14             	sub    $0x14,%esp
 167:	e8 fc ff ff ff       	call   168 <get_login_key+0x8>
 16c:	81 c3 02 00 00 00    	add    $0x2,%ebx
 172:	83 ec 0c             	sub    $0xc,%esp
 175:	6a 32                	push   $0x32
 177:	e8 fc ff ff ff       	call   178 <get_login_key+0x18>
 17c:	83 c4 10             	add    $0x10,%esp
 17f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 182:	83 ec 0c             	sub    $0xc,%esp
 185:	8d 83 75 00 00 00    	lea    0x75(%ebx),%eax
 18b:	50                   	push   %eax
 18c:	e8 fc ff ff ff       	call   18d <get_login_key+0x2d>
 191:	83 c4 10             	add    $0x10,%esp
 194:	8b 83 00 00 00 00    	mov    0x0(%ebx),%eax
 19a:	8b 00                	mov    (%eax),%eax
 19c:	83 ec 04             	sub    $0x4,%esp
 19f:	50                   	push   %eax
 1a0:	6a 32                	push   $0x32
 1a2:	ff 75 f0             	push   -0x10(%ebp)
 1a5:	e8 fc ff ff ff       	call   1a6 <get_login_key+0x46>
 1aa:	83 c4 10             	add    $0x10,%esp
 1ad:	85 c0                	test   %eax,%eax
 1af:	75 26                	jne    1d7 <get_login_key+0x77>
 1b1:	8b 83 00 00 00 00    	mov    0x0(%ebx),%eax
 1b7:	8b 00                	mov    (%eax),%eax
 1b9:	50                   	push   %eax
 1ba:	6a 1a                	push   $0x1a
 1bc:	6a 01                	push   $0x1
 1be:	8d 83 85 00 00 00    	lea    0x85(%ebx),%eax
 1c4:	50                   	push   %eax
 1c5:	e8 fc ff ff ff       	call   1c6 <get_login_key+0x66>
 1ca:	83 c4 10             	add    $0x10,%esp
 1cd:	83 ec 0c             	sub    $0xc,%esp
 1d0:	6a 01                	push   $0x1
 1d2:	e8 fc ff ff ff       	call   1d3 <get_login_key+0x73>
 1d7:	83 ec 0c             	sub    $0xc,%esp
 1da:	ff 75 f0             	push   -0x10(%ebp)
 1dd:	e8 fc ff ff ff       	call   1de <get_login_key+0x7e>
 1e2:	83 c4 10             	add    $0x10,%esp
 1e5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 1e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
 1eb:	8d 50 ff             	lea    -0x1(%eax),%edx
 1ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
 1f1:	01 d0                	add    %edx,%eax
 1f3:	0f b6 00             	movzbl (%eax),%eax
 1f6:	3c 0a                	cmp    $0xa,%al
 1f8:	75 0e                	jne    208 <get_login_key+0xa8>
 1fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
 1fd:	8d 50 ff             	lea    -0x1(%eax),%edx
 200:	8b 45 f0             	mov    -0x10(%ebp),%eax
 203:	01 d0                	add    %edx,%eax
 205:	c6 00 00             	movb   $0x0,(%eax)
 208:	8b 45 f0             	mov    -0x10(%ebp),%eax
 20b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 20e:	c9                   	leave  
 20f:	c3                   	ret    

00000210 <decode>:
 210:	55                   	push   %ebp
 211:	89 e5                	mov    %esp,%ebp
 213:	83 ec 18             	sub    $0x18,%esp
 216:	e8 fc ff ff ff       	call   217 <decode+0x7>
 21b:	05 01 00 00 00       	add    $0x1,%eax
 220:	83 ec 0c             	sub    $0xc,%esp
 223:	ff 75 0c             	push   0xc(%ebp)
 226:	e8 fc ff ff ff       	call   227 <decode+0x17>
 22b:	83 c4 10             	add    $0x10,%esp
 22e:	89 45 ec             	mov    %eax,-0x14(%ebp)
 231:	8b 45 08             	mov    0x8(%ebp),%eax
 234:	89 45 e8             	mov    %eax,-0x18(%ebp)
 237:	eb 65                	jmp    29e <decode+0x8e>
 239:	8b 45 e8             	mov    -0x18(%ebp),%eax
 23c:	0f b6 00             	movzbl (%eax),%eax
 23f:	3c 60                	cmp    $0x60,%al
 241:	7e 56                	jle    299 <decode+0x89>
 243:	8b 45 e8             	mov    -0x18(%ebp),%eax
 246:	0f b6 00             	movzbl (%eax),%eax
 249:	3c 7a                	cmp    $0x7a,%al
 24b:	7f 4c                	jg     299 <decode+0x89>
 24d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 250:	0f b6 00             	movzbl (%eax),%eax
 253:	0f be c0             	movsbl %al,%eax
 256:	83 e8 61             	sub    $0x61,%eax
 259:	89 45 f0             	mov    %eax,-0x10(%ebp)
 25c:	8b 55 f0             	mov    -0x10(%ebp),%edx
 25f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 262:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 265:	ba 4f ec c4 4e       	mov    $0x4ec4ec4f,%edx
 26a:	89 c8                	mov    %ecx,%eax
 26c:	f7 ea                	imul   %edx
 26e:	89 d0                	mov    %edx,%eax
 270:	c1 f8 03             	sar    $0x3,%eax
 273:	89 ca                	mov    %ecx,%edx
 275:	c1 fa 1f             	sar    $0x1f,%edx
 278:	29 d0                	sub    %edx,%eax
 27a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 27d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 280:	6b d0 1a             	imul   $0x1a,%eax,%edx
 283:	89 c8                	mov    %ecx,%eax
 285:	29 d0                	sub    %edx,%eax
 287:	89 45 f4             	mov    %eax,-0xc(%ebp)
 28a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 28d:	83 c0 61             	add    $0x61,%eax
 290:	89 c2                	mov    %eax,%edx
 292:	8b 45 e8             	mov    -0x18(%ebp),%eax
 295:	88 10                	mov    %dl,(%eax)
 297:	eb 01                	jmp    29a <decode+0x8a>
 299:	90                   	nop
 29a:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 29e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 2a1:	0f b6 00             	movzbl (%eax),%eax
 2a4:	84 c0                	test   %al,%al
 2a6:	75 91                	jne    239 <decode+0x29>
 2a8:	8b 45 08             	mov    0x8(%ebp),%eax
 2ab:	c9                   	leave  
 2ac:	c3                   	ret    

000002ad <calculate_shifts>:
 2ad:	55                   	push   %ebp
 2ae:	89 e5                	mov    %esp,%ebp
 2b0:	83 ec 10             	sub    $0x10,%esp
 2b3:	e8 fc ff ff ff       	call   2b4 <calculate_shifts+0x7>
 2b8:	05 01 00 00 00       	add    $0x1,%eax
 2bd:	8b 45 08             	mov    0x8(%ebp),%eax
 2c0:	89 45 f8             	mov    %eax,-0x8(%ebp)
 2c3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 2ca:	eb 10                	jmp    2dc <calculate_shifts+0x2f>
 2cc:	8b 45 f8             	mov    -0x8(%ebp),%eax
 2cf:	0f b6 00             	movzbl (%eax),%eax
 2d2:	0f be c0             	movsbl %al,%eax
 2d5:	31 45 fc             	xor    %eax,-0x4(%ebp)
 2d8:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 2dc:	8b 45 f8             	mov    -0x8(%ebp),%eax
 2df:	0f b6 00             	movzbl (%eax),%eax
 2e2:	84 c0                	test   %al,%al
 2e4:	75 e6                	jne    2cc <calculate_shifts+0x1f>
 2e6:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 2e9:	ba 4f ec c4 4e       	mov    $0x4ec4ec4f,%edx
 2ee:	89 c8                	mov    %ecx,%eax
 2f0:	f7 ea                	imul   %edx
 2f2:	89 d0                	mov    %edx,%eax
 2f4:	c1 f8 03             	sar    $0x3,%eax
 2f7:	89 ca                	mov    %ecx,%edx
 2f9:	c1 fa 1f             	sar    $0x1f,%edx
 2fc:	29 d0                	sub    %edx,%eax
 2fe:	6b d0 1a             	imul   $0x1a,%eax,%edx
 301:	89 c8                	mov    %ecx,%eax
 303:	29 d0                	sub    %edx,%eax
 305:	89 c2                	mov    %eax,%edx
 307:	f7 da                	neg    %edx
 309:	0f 49 c2             	cmovns %edx,%eax
 30c:	89 45 fc             	mov    %eax,-0x4(%ebp)
 30f:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 313:	75 07                	jne    31c <calculate_shifts+0x6f>
 315:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)
 31c:	8b 45 fc             	mov    -0x4(%ebp),%eax
 31f:	c9                   	leave  
 320:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.ax:

00000000 <__x86.get_pc_thunk.ax>:
   0:	8b 04 24             	mov    (%esp),%eax
   3:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.bx:

00000000 <__x86.get_pc_thunk.bx>:
   0:	8b 1c 24             	mov    (%esp),%ebx
   3:	c3                   	ret    
